<!doctype html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="Author" content="">
  <meta name="Keywords" content="">
  <meta name="Description" content="">
  <script src="../jquery.min.js" type="text/javascript"></script>
  <script src="../pluginBase.js" type="text/javascript"></script>
<!--  <script src="../plugins.js" type="text/javascript"></script>-->
<!--  <script src="../plugins-ui.js" type="text/javascript"></script>-->
  <link rel="stylesheet" href="../plugins.css">
  <title>签名插件</title>
</head>
<body>
<script>
  (function(window) {
    window.Asc.plugin.init = function() {
      var proxyApp = '';
      var matches = /onlyoffice-plugin-(.*?)\//g.exec(location.href);
      if (matches) {
        proxyApp = matches[1];
      }
      var stampData = window.Asc.plugin.info.userName;
      var stampType = 'image';
      var stampInfo = {};
      $.ajax({
        url: location.origin + '/resource/get-sign-data/' + window.Asc.plugin.info.userId,
        type: 'get',
        async: false,
        dataType: 'json',
        headers: {
          app: proxyApp
        },
        success: function(result) {
          if (result.succ) {
            stampType = result.type;
            stampData = result.sign;
            stampInfo = result.info || {};
          }
        }
      });
      Asc.scope.stampData = stampData;
      Asc.scope.stampType = stampType;
      Asc.scope.stampWidth = stampInfo.width;
      Asc.scope.stampHeight = stampInfo.height;
      Asc.scope.documentId = window.Asc.plugin.info.documentId;
      Asc.scope.origin = window.location.origin;
      Asc.scope.proxyApp = proxyApp;
      if (window.Asc.plugin.info.editorType === 'word') {
        this.callCommand(function() {
          var oDocument, oParagraph;
          if (Asc.scope.stampType === 'text') {
            oDocument = Api.GetDocument();
            oParagraph = Api.CreateParagraph();
            oParagraph.AddText(Asc.scope.stampData);
            oDocument.InsertContent([oParagraph], true);
          } else {
            oDocument = Api.GetDocument();
            oParagraph = Api.CreateParagraph();
            var oDrawing = Api.CreateImage(Asc.scope.stampData, Asc.scope.stampWidth * 3600, Asc.scope.stampHeight * 3600);
            oDrawing.SetWrappingStyle('inFront');
            oParagraph.AddDrawing(oDrawing);
            oDocument.InsertContent([oParagraph], true);
          }
          var http = new XMLHttpRequest();
          http.open('GET', Asc.scope.origin + '/sys/set-file-signed/' + Asc.scope.documentId);
          http.setRequestHeader('app', Asc.scope.proxyApp);
          http.send();
        }, true);
      } else if (window.Asc.plugin.info.editorType === 'cell') {
        this.callCommand(function() {
          var oWorksheet;
          if (Asc.scope.stampType === 'text') {
            oWorksheet = Api.GetActiveSheet();
            var range = oWorksheet.GetSelection();
            range.SetValue(Asc.scope.stampData);
          } else {
            oWorksheet = Api.GetActiveSheet();
            var cell = oWorksheet.GetActiveCell();
            var col = cell && cell.GetCol() >= 0 ? cell.GetCol() : 0;
            var row = cell && cell.GetRow() >= 0 ? cell.GetRow() : 0;
            oWorksheet.AddImage(Asc.scope.stampData, Asc.scope.stampWidth * 3600, Asc.scope.stampHeight * 3600, col, 0, row, 0);
          }
          var http = new XMLHttpRequest();
          http.open('GET', Asc.scope.origin + '/sys/set-file-signed/' + Asc.scope.documentId);
          http.setRequestHeader('app', Asc.scope.proxyApp);
          http.send();
        }, true);
      }
    };
    window.Asc.plugin.button = function(id) {
    };
  })(window);
</script>
</body>
</html>

